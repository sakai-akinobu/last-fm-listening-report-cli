import * as commander from 'commander';

interface Options {
  apiKey: string | undefined;
  user: string | undefined;
  period: string | undefined;
  limit: string | undefined;
}

export function parse(
  env: {[key: string]: string | undefined},
  argv: string[],
): Options {
  const program = commander
    .option('-k, --api-key [api-key]', 'API key generated by Last.fm. See also https://www.last.fm/api')
    .option('-u, --user [user]', 'User name on Last.fm.')
    .option('-p, --period [period]', 'The time period over which to retrieve. default 1month. overall | 7day | 1month | 3month | 6month | 12month')
    .option('-l, --limit [limit]', 'The number of results to fetch. default 3.')
    .parse(argv);

  let {apiKey, user} = program;
  const {period, limit} = program;

  if (!apiKey && env.LASTIFY_API_KEY) {
    apiKey = env.LASTIFY_API_KEY;
  }
  if (!user && env.LASTIFY_USER) {
    user = env.LASTIFY_USER;
  }

  return {
    apiKey,
    user,
    period,
    limit,
  };
}
